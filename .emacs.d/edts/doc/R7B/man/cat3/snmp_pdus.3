


snmp_pdus(3)        ERLANG MODULE DEFINITION         snmp_pdus(3)



MODULE
     snmp_pdus - Encode and Decode Functions for SNMP PDUs

DESCRIPTION
     RFC1157, RFC1905 and/or RFC2272 should be studied  carefully
     before using this module, _s_n_m_p__p_d_u_s.

     The module _s_n_m_p__p_d_u_s contains  functions  for  encoding  and
     decoding  of SNMP protocol data units (PDUs). In short, this
     module converts a list of bytes to Erlang record representa-
     tions and vice versa. The record definitions can be found in
     the file _s_n_m_p/_i_n_c_l_u_d_e/_s_n_m_p__t_y_p_e_s._h_r_l. If snmpv3 is used, the
     module that includes _s_n_m_p__t_y_p_e_s._h_r_l must define the constant
     _S_N_M_P__U_S_E__V_3 before the header file is included. Example:

     -define(SNMP_USE_V3, true).
     -include_lib("snmp/include/snmp_types.hrl").

     Encoding and decoding must be done explicitly  when  writing
     your own Net if process.


EXPORTS
     dec_message([byte()]) -> Message

          Types
               Message = #message

          Decodes a list of bytes into an SNMP Message. Note,  if
          there  is  a  v3 message, the _m_s_g_S_e_c_u_r_i_t_y_P_a_r_a_m_e_t_e_r_s are
          not decoded. They must be explicitly decoded by a  call
          to  a  security  model specific decoding function, e.g.
          _d_e_c__u_s_m__s_e_c_u_r_i_t_y__p_a_r_a_m_e_t_e_r_s/_1.  Also   note,   if   the
          _s_c_o_p_e_d_P_D_U   is  encrypted,  the  OCTET  STRING  encoded
          _e_n_c_r_y_p_t_e_d_P_D_U will be present in the _d_a_t_a field.

     dec_message_only([byte()]) -> Message

          Types
               Message = #message

          Decodes a list of bytes into an SNMP Message, but  does
          not  decode  the  data part of the Message. That means,
          data is still a list of bytes, normally an encoded  _P_D_U
          (v1  and  V2)  or  an  encoded  and  possibly encrypted
          _s_c_o_p_e_d_P_D_U (v3).

     dec_pdu([byte()]) -> Pdu

          Types
               Pdu = #pdu




Ericsson Utvecklings ALBast change: snmp  3.2.1                   1






snmp_pdus(3)        ERLANG MODULE DEFINITION         snmp_pdus(3)



          Decodes a list of bytes into an SNMP Pdu.

     dec_scoped_pdu([byte()]) -> ScopedPdu

          Types
               ScopedPdu = #scoped_pdu

          Decodes a list of bytes into an SNMP ScopedPdu.

     dec_scoped_pdu_data([byte()]) -> ScopedPduData

          Types
               ScopedPduData = #scoped_pdu | EncryptedPDU
               EncryptedPDU = [byte()]

          Decodes a list  of  bytes  into  either  a  scoped  pdu
          record,  or  -  if  the scoped pdu was encrypted - to a
          list of bytes.

     dec_usm_security_parameters([byte()]) -> UsmSecParams

          Types
               UsmSecParams = #usmSecurityParameters

          Decodes a list of bytes into an SNMP UsmSecurityParame-
          ters

     enc_encrypted_scoped_pdu(EncryptedScopedPdu) -> [byte()]

          Types
               EncryptedScopedPdu = [byte()]

          Encodes an  encrypted  SNMP  ScopedPdu  into  an  OCTET
          STRING  that can de used as the _d_a_t_a field in a _m_e_s_s_a_g_e
          record, that later  can  be  encoded  with  a  call  to
          _e_n_c__m_e_s_s_a_g_e__o_n_l_y/_1.

          This function should be used whenever the _S_c_o_p_e_d_P_D_U  is
          encrypted.

     enc_message(Message) -> [byte()]

          Types
               Message = #message

          Encodes a message record to a list of bytes.

     enc_message_only(Message) -> [byte()]

          Types
               Message = #message




Ericsson Utvecklings ALBast change: snmp  3.2.1                   2






snmp_pdus(3)        ERLANG MODULE DEFINITION         snmp_pdus(3)



          _M_e_s_s_a_g_e is a record where the _d_a_t_a field is assumed  to
          be  encoded  (a  list of bytes). If there is a v1 or v2
          message, the _d_a_t_a field is an encoded _P_D_U, and if there
          is  a  v3  message,  _d_a_t_a  is  an  encoded and possibly
          encrypted _s_c_o_p_e_d_P_D_U.

     enc_pdu(Pdu) -> [byte()]

          Types
               Pdu = #pdu

          Encodes an SNMP Pdu into a list of bytes.

     enc_scoped_pdu(ScopedPdu) -> [byte()]

          Types
               ScopedPdu = #scoped_pdu

          Encodes an SNMP ScopedPdu into a list of  bytes,  which
          can  be encrypted, and after encryption, encoded with a
          call to _e_n_c__e_n_c_r_y_p_t_e_d__s_c_o_p_e_d__p_d_u/_1; or it can  be  used
          as  the  _d_a_t_a field in a _m_e_s_s_a_g_e record, which then can
          be encoded with _e_n_c__m_e_s_s_a_g_e__o_n_l_y/_1.

     enc_usm_security_parameters(UsmSecParams) -> [byte()]

          Types
               UsmSecParams = #usmSecurityParameters

          Encodes  SNMP  UsmSecurityParameters  into  a  list  of
          bytes.

AUTHORS
     Martin Bjorklund - support@erlang.ericsson.se
     Klas Eriksson - support@erlang.ericsson.se




















Ericsson Utvecklings ALBast change: snmp  3.2.1                   3



