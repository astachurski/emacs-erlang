


CosNotifyChannelCAodsmNiont_iESfReyLqCAuhNeaGnncnMeeOPlDrAUodLxmEyiPnDu_ElSFleICqNouIneTsnIucOmeNePrr(o3x)yPullConsumer(3)



MODULE
     CosNotifyChannelAdmin_SequenceProxyPullConsumer -

DESCRIPTION
     To get access to the record definitions for  the  structures
     use:
      -_i_n_c_l_u_d_e__l_i_b("_c_o_s_N_o_t_i_f_i_c_a_t_i_o_n/_i_n_c_l_u_d_e/*._h_r_l").

     This module also exports the functions described in:

       * CosNotifyComm_NotifyPublish

       * CosNotification_QoSAdmin

       * CosNotifyFilter_FilterAdmin

       * CosNotifyChannelAdmin_ProxyConsumer


EXPORTS
     connect_sequence_pull_supplier(SequenceProxyPullConsumer,
     PullSupplier) -> Reply

          Types
               SequenceProxyPullConsumer = #objref
               PullSupplier = #objref
               Reply       =       ok       |       {'EXCEPTION',
               #'CosEventChannelAdmin_AlreadyConnected'{}}      |
               {'EXCEPTION', #'CosEventChannelAdmin_TypeError'{}}

          This operation connects a _P_u_l_l_S_u_p_p_l_i_e_r  to  the  target
          object.  If a connection already exists or the supplied
          client    does    not     support     the     functions
          _p_u_l_l__s_t_r_u_c_t_u_r_e_d__e_v_e_n_t_s  and  _t_r_y__p_u_l_l__s_t_r_u_c_t_u_r_e_d__e_v_e_n_t_s
          an exception is raised.

     suspend_connection(SequenceProxyPullConsumer) -> Reply

          Types
               SequenceProxyPullConsumer = #objref
               Reply       =       ok       |       {'EXCEPTION',
               #'CosNotifyChannelAdmin_ConnectionAlreadyInactive'{}}
               |                                    {'EXCEPTION',
               #'CosNotifyChannelAdmin_NotConnected'{}}

          If a connection exist,  invoking  this  operation  will
          suspend the connection until instructed otherwise. Oth-
          erwise, no client have been connected or this operation
          already have been invoked an exception is raised.

     resume_connection(SequenceProxyPullConsumer) -> Reply




Ericsson UtvecklLiansgtscAhBange: cosNotification  1.0.2              1






CosNotifyChannelCAodsmNiont_iESfReyLqCAuhNeaGnncnMeeOPlDrAUodLxmEyiPnDu_ElSFleICqNouIneTsnIucOmeNePrr(o3x)yPullConsumer(3)



          Types
               SequenceProxyPullConsumer = #objref
               Reply       =       ok       |       {'EXCEPTION',
               #'CosNotifyChannelAdmin_ConnectionAlreadyInactive'{}}
               |                                    {'EXCEPTION',
               #'CosNotifyChannelAdmin_NotConnected'{}}

          If an connection have  been  suspended  this  operation
          must  be  used to resume the connection. If the connec-
          tion already is active or no client have been connected
          an exception is raised.

     disconnect_sequence_pull_consumer(SequenceProxyPullConsumer)
     -> ok

          Types
               SequenceProxyPullConsumer = #objref

          This operation close the connection to the  client  and
          terminates the target object.

AUTHOR
     support - support@erlang.ericsson.se
































Ericsson UtvecklLiansgtscAhBange: cosNotification  1.0.2              2



