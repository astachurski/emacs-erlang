


erl_format(3)          C LIBRARY FUNCTIONS          erl_format(3)



NAME
     erl_format - Create and Match Erlang Terms

DESCRIPTION
     This module contains two routines - one general function for
     creating  Erlang  terms  and one for pattern matching Erlang
     terms.


EXPORTS
     ETERM *erl_format(FormatStr, ... )

          Types
               char *FormatStr;

          This is a general function for  creating  Erlang  terms
          using  a  format  specifier  and a corresponding set of
          arguments, much in the way _p_r_i_n_t_f() works.

          _F_o_r_m_a_t_S_t_r is a format specification string. The set  of
          valid format specifiers is as follows:

            * ~i - Integer

            * ~f - Floating point

            * ~a - Atom

            * ~s - String

            * ~w - Arbitrary Erlang term

          For each format specifier that  appears  in  _F_o_r_m_a_t_S_t_r,
          there  must  be a corresponding argument following _F_o_r_-
          _m_a_t_S_t_r. An Erlang term is built according to  the  _F_o_r_-
          _m_a_t_S_t_r  with  values  and Erlang terms substituted from
          the corresponding arguments and according to the  indi-
          vidual format specifiers. For example:

          erl_format("[{name,~a},{age,~i},{data,~w}]",
                     "madonna",
                     21,
                     erl_format("[{adr,~s,~i}]","E-street",42));

          This will create an (_E_T_E_R_M *)  structure  corresponding
          to the Erlang term: [{_n_a_m_e, _m_a_d_o_n_n_a}, {_a_g_e, _2_1}, {_d_a_t_a,
          [{_a_d_r, "_E-_s_t_r_e_e_t", _4_2}]}]

          The function returns an Erlang term, or  NULL  if  _F_o_r_-
          _m_a_t_S_t_r does not describe a valid Erlang term.





Ericsson UtveckliLnagsst AcBhange: erl_interface  3.2.3               1






erl_format(3)          C LIBRARY FUNCTIONS          erl_format(3)



     int erl_match(Pattern, Term)

          Types
               ETERM *Pattern, *Term;

          This function is used to perform pattern matching simi-
          lar  to  that done in Erlang. Refer to an Erlang manual
          for matching rules and more examples.

          _P_a_t_t_e_r_n is an Erlang term, possibly containing  unbound
          variables.

          _T_e_r_m is an Erlang term that we wish  to  match  against
          _P_a_t_t_e_r_n.

          _T_e_r_m and _P_a_t_t_e_r_n are compared, and  any  unbound  vari-
          ables  in  _P_a_t_t_e_r_n are bound to corresponding values in
          _T_e_r_m.

          If _T_e_r_m  and  _P_a_t_t_e_r_n  can  be  matched,  the  function
          returns  a  non-zero  value and binds any unbound vari-
          ables in _P_a_t_t_e_r_n. If _T_e_r_m _P_a_t_t_e_r_n  do  not  match,  the
          function returns 0. For example:

          ETERM *term, *pattern, *pattern2;
          term1    = erl_format("{14,21}");
          term2    = erl_format("{19,19}");
          pattern1 = erl_format("{A,B}");
          pattern2 = erl_format("{F,F}");
          if (erl_match(pattern1, term1)) {
            /* match succeeds:
             * A gets bound to 14,
             * B gets bound to 21
             */
            ...
          }
          if (erl_match(pattern2, term1)) {
            /* match fails because F cannot be
             * bound to two separate values, 14 and 21
             */
            ...
          }
          if (erl_match(pattern2, term2)) {
            /* match succeeds and F gets bound to 19 */
            ...
          }

          _e_r_l__v_a_r__c_o_n_t_e_n_t() can be used to retrieve  the  content
          of  any  variables  bound  as  a  result  of  a call to
          _e_r_l__m_a_t_c_h().





Ericsson UtveckliLnagsst AcBhange: erl_interface  3.2.3               2






erl_format(3)          C LIBRARY FUNCTIONS          erl_format(3)



AUTHOR
     T.Tornkvist - support@erlang.ericsson.se





















































Ericsson UtveckliLnagsst AcBhange: erl_interface  3.2.3               3



