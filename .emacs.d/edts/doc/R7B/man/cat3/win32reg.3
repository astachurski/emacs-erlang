


win32reg(3)         ERLANG MODULE DEFINITION          win32reg(3)



MODULE
     win32reg - win32reg provides access to the registry on  Win-
     dows

DESCRIPTION
     _w_i_n_3_2_r_e_g provides read and write access to the  registry  on
     Windows.  It is essentially a port driver wrapped around the
     Win32 API calls for accessing the registry.

     The registry is a hierarchical database, used to store vari-
     ous system and software information in Windows. It is avail-
     able in Windows 95 and Windows NT. It contains  installation
     data,  and is updated by installers and system programs. The
     Erlang installer updates the registry by  adding  data  that
     Erlang needs.

     The registry contains keys and values.  Keys  are  like  the
     directories  in a file system, they form a hierarchy. Values
     are like files, they have a name and a  value,  and  also  a
     type.

     Paths to keys are left to right, with sub-keys to the  right
     and  backslash between keys. (Remember that backslashes must
     be doubled in Erlang strings.) Case  is  preserved  but  not
     significant.                                        Example:
     "\\_h_k_e_y__l_o_c_a_l__m_a_c_h_i_n_e\\_s_o_f_t_w_a_r_e\\_E_r_i_c_s_s_o_n\\_E_r_l_a_n_g\\_5._0"   is
     the  key  for  the  installation  data for the latest Erlang
     release.

     There are six entry points  in  the  Windows  registry,  top
     level  keys.  They can be abbreviated in the _w_i_n_3_2_r_e_g module
     as:

     Abbrev.          Registry key
     =======          ============
     hkcr             HKEY_CLASSES_ROOT
     current_user     HKEY_CURRENT_USER
     hkcu             HKEY_CURRENT_USER
     local_machine    HKEY_LOCAL_MACHINE
     hklm             HKEY_LOCAL_MACHINE
     users            HKEY_USERS
     hku              HKEY_USERS
     current_config   HKEY_CURRENT_CONFIG
     hkcc             HKEY_CURRENT_CONFIG
     dyn_data         HKEY_DYN_DATA
     hkdd             HKEY_DYN_DATA

     The     key     above     could      be      written      as
     "\\_h_k_l_m\\_s_o_f_t_w_a_r_e\\_e_r_i_c_s_s_o_n\\_e_r_l_a_n_g\\_5._0".

     The _w_i_n_3_2_r_e_g module uses a current key. It works  much  like
     the  current  directory. From the current key, values can be



Ericsson UtvecklingsLAaBst change: stdlib  1.9.1                  1






win32reg(3)         ERLANG MODULE DEFINITION          win32reg(3)



     fetched, sub-keys can be listed, and so on.

     Under a key, any number of named values can be stored.  They
     have name, and types, and data.

     Currently, the _w_i_n_3_2_r_e_g module  supports  storing  only  the
     following  types:  REG_DWORD,  which  is  an integer, REG_SZ
     which is a string and REG_BINARY which is  a  binary.  Other
     types can be read, and will be returned as binaries.

     There is also a "default" value, which has the empty  string
     as  name.  It  is  read  and  written  with the atom _d_e_f_a_u_l_t
     instead of the name.

     Some registry values are stored as strings  with  references
     to  environment  variables, e.g. "%_S_y_s_t_e_m_R_o_o_t%_W_i_n_d_o_w_s". _S_y_s_-
     _t_e_m_R_o_o_t is an environment variable, and should  be  replaced
     with  its  value.  A  function _e_x_p_a_n_d/_1 is provided, so that
     environment variables surrounded in %  can  be  expanded  to
     their values.

     For additional information on the Windows  registry  consult
     the Win32 Programmer's Reference.


EXPORTS
     change_key(RegHandle, Key) -> ReturnValue

          Types
               RegHandle = term()
               Key = string()

          Changes the current key to another key. Works like  cd.
          The  key  can  be specified as a relative path or as an
          absolute path, starting with \.

     change_key_create(RegHandle, Key) -> ReturnValue

          Types
               RegHandle = term()
               Key = string()

          Creates a key, or just changes to it, if it is  already
          there.  Works like a combination of _m_k_d_i_r and _c_d. Calls
          the Win32 API function _R_e_g_C_r_e_a_t_e_K_e_y_E_x().

          The registry must have been opened in write-mode.

     close(RegHandle)-> ReturnValue

          Types
               RegHandle = term()



Ericsson UtvecklingsLAaBst change: stdlib  1.9.1                  2






win32reg(3)         ERLANG MODULE DEFINITION          win32reg(3)



          Closes the registry. After that, the  _R_e_g_H_a_n_d_l_e  cannot
          be used.

     current_key(RegHandle) -> ReturnValue

          Types
               RegHandle = term()
               ReturnValue = {ok, string()}

          Returns the path  to  the  current  key.  This  is  the
          equivalent of _p_w_d.

          Note that the current key is stored in the driver,  and
          might be invalid (e.g. if the key has been removed).

     delete_key(RegHandle) -> ReturnValue

          Types
               RegHandle = term()
               ReturnValue = ok | {error, ErrorId}

          Deletes the current key, if  it  is  valid.  Calls  the
          Win32  API function _R_e_g_D_e_l_e_t_e_K_e_y(). Note that this call
          does   not   change   the    current    key,    (unlike
          _c_h_a_n_g_e__k_e_y__c_r_e_a_t_e/_2.)  This  means that after the call,
          the current key is invalid.

     delete_value(RegHandle, Name) -> ReturnValue

          Types
               RegHandle = term()
               ReturnValue = ok | {error, ErrorId}

          Deletes a named value on  the  current  key.  The  atom
          _d_e_f_a_u_l_t is used for the the default value.

          The registry must have been opened in write-mode.

     expand(String) -> ExpandedString

          Types
               String = string()
               ExpandedString = string()

          Expands  a  string  containing  environment   variables
          between  percent  characters. Anything between two % is
          taken for a environment variable, and  is  replaced  by
          the value. Two consecutive % is replaced by one %.

          A variablename that is not  in  the  environment,  will
          result in an error.




Ericsson UtvecklingsLAaBst change: stdlib  1.9.1                  3






win32reg(3)         ERLANG MODULE DEFINITION          win32reg(3)



     format_error(ErrorId) -> ErrorString

          Types
               ErrorId = atom()
               ErrorString = string()

          Convert an POSIX errorcode  to  a  string  (by  calling
          _e_r_l__p_o_s_i_x__m_s_g:_m_e_s_s_a_g_e).

     open(OpenModeList)-> ReturnValue

          Types
               OpenModeList = [OpenMode]
               OpenMode = read | write

          Opens the registry for reading or writing. The  current
          key will be the root (_H_K_E_Y__C_L_A_S_S_E_S__R_O_O_T). The _r_e_a_d flag
          in the mode list can be omitted.

          Use _c_h_a_n_g_e__k_e_y/_2 with an absolute path after _o_p_e_n.

     set_value(RegHandle, Name, Value) -> ReturnValue

          Types
               Name = string() | default
               Value = string() | integer() | binary()

          Sets the named (or default) value to value.  Calls  the
          Win32 API function _R_e_g_S_e_t_V_a_l_u_e_E_x(). The value can be of
          three types, and the corresponding registry  type  will
          be  used.  Currently the types supported are: _R_E_G__D_W_O_R_D
          for integers, _R_E_G__S_Z for  strings  and  _R_E_G__B_I_N_A_R_Y  for
          binaries.  Other  types  cannot  currently  be added or
          changed.

          The registry must have been opened in write-mode.

     sub_keys(RegHandle) -> ReturnValue

          Types
               ReturnValue = {ok, SubKeys} | {error, ErrorId}
               SubKeys = [SubKey]
               SubKey = string()

          Returns a list of subkeys to the current key. Calls the
          Win32 API function _E_n_u_m_R_e_g_K_e_y_s_E_x().

          Avoid calling this on the root keys, it can be slow.

     value(RegHandle, Name) -> ReturnValue

          Types



Ericsson UtvecklingsLAaBst change: stdlib  1.9.1                  4






win32reg(3)         ERLANG MODULE DEFINITION          win32reg(3)



               Name = string() | default
               ReturnValue = {ok, Value}
               Value = string() | integer() | binary()

          Retrieves the named value (or default) on  the  current
          key.  Registry  values  of type _R_E_G__S_Z, are returned as
          strings.  Type  _R_E_G__D_W_O_R_D  values   are   returned   as
          integers. All other types are returned as binaries.

     values(RegHandle) -> ReturnValue

          Types
               ReturnValue = {ok, ValuePairs}
               ValuePairs = [ValuePair]
               ValuePair = {Name, Value}
               Name = string | default
               Value = string() | integer() | binary()

          Retrieves a list of all values on the current key.  The
          values  have types corresponding to the registry types,
          see   _v_a_l_u_e.   Calls    the    Win32    API    function
          _E_n_u_m_R_e_g_V_a_l_u_e_s_E_x().

SEE ALSO
     Win32 Programmer's Reference (from Microsoft)

     _e_r_l__p_o_s_i_x__m_s_g

     The Windows 95 Registry (book from O'Reilly)

AUTHORS
     Bjorn Gustavsson - support@erlang.ericsson.se
     Jakob Cederlund - support@erlang.ericsson.se






















Ericsson UtvecklingsLAaBst change: stdlib  1.9.1                  5



