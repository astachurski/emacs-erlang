


CosNotifyChannelAdmin_ESRuLpApNlGiCeoMrsOANDdoUmtLiiEnf(yD3CE)hFIaNnInTeIlOANdmin_SupplierAdmin(3)



MODULE
     CosNotifyChannelAdmin_SupplierAdmin -

DESCRIPTION
     To get access to the record definitions for  the  structures
     use:
      -_i_n_c_l_u_d_e__l_i_b("_c_o_s_N_o_t_i_f_i_c_a_t_i_o_n/_i_n_c_l_u_d_e/*._h_r_l").

     This module also exports the functions described in:

       * CosNotification_QoSAdmin

       * CosNotifyComm_NotifyPublish

       * CosNotifyFilter_FilterAdmin


EXPORTS
     _get_MyID(SupplierAdmin) -> AdminID

          Types
               SupplierAdmin = #objref
               AdminID = long()

          When a _S_u_p_p_l_i_e_r_A_d_m_i_n object is created it  is  given  a
          unique Id by the creating channel. This readonly attri-
          bute maintains this Id.

     _get_MyChannel(SupplierAdmin) -> Channel

          Types
               SupplierAdmin = #objref
               Channel = #objref

          The creating channel's reference is maintained by  this
          readonly attribute.

     _get_MyOperator(SupplierAdmin) -> OpType

          Types
               SupplierAdmin = #objref
               OpType = 'AND_OP' | 'OR_OP'

          The Operation Type, which determines the semantics  the
          target  object  will use for any associated _F_i_l_t_e_r_s, is
          maintained by this readonly attribute.

     _get_pull_consumers(SupplierAdmin) -> ProxyIDSeq

          Types
               SupplierAdmin = #objref
               ProxyIDSeq = [ProxyID]



Ericsson UtvecklLiansgtscAhBange: cosNotification  1.0.2              1






CosNotifyChannelAdmin_ESRuLpApNlGiCeoMrsOANDdoUmtLiiEnf(yD3CE)hFIaNnInTeIlOANdmin_SupplierAdmin(3)



               ProxyID = long()

          A sequence of all associated _P_u_l_l_P_r_o_x_y  Id's  is  main-
          tained by this readonly attribute.

     _get_push_consumers(SupplierAdmin) -> ProxyIDSeq

          Types
               SupplierAdmin = #objref
               ProxyIDSeq = [ProxyID]
               ProxyID = long()

          This operation returns all _P_u_s_h_P_r_o_x_y  Id's  created  by
          the target object.

     get_proxy_consumer(SupplierAdmin, ProxyID) -> Reply

          Types
               SupplierAdmin = #objref
               ProxyID = long()
               Reply      =      Proxy      |       {'EXCEPTION',
               #'CosNotifyChannelAdmin_ProxyNotFound'{}}
               Proxy = #objref

          The Proxy which corresponds to the given Id is returned
          by this operation.

     obtain_notification_pull_consumer(SupplierAdmin,   Supplier-
     Type) -> Reply

          Types
               SupplierAdmin = #objref
               SupplierType = 'ANY_EVENT' | 'STRUCTURED_EVENT'  |
               'SEQUENCE_EVENT'
               Reply = {Proxy, ProxyID}
               Proxy = #objref
               ProxyID = long()

          This operation creates a  new  proxy  and  returns  its
          object  reference  along  with its ID. The _S_u_p_p_l_i_e_r_T_y_p_e
          parameter determines the event  type  accepted  by  the
          proxy.

     obtain_pull_consumer(SupplierAdmin) -> Proxy

          Types
               SupplierAdmin = #objref
               Proxy = #objref

          A proxy which accepts #_a_n_y{} events is created by  this
          operation.




Ericsson UtvecklLiansgtscAhBange: cosNotification  1.0.2              2






CosNotifyChannelAdmin_ESRuLpApNlGiCeoMrsOANDdoUmtLiiEnf(yD3CE)hFIaNnInTeIlOANdmin_SupplierAdmin(3)



     obtain_notification_push_consumer(SupplierAdmin,   Supplier-
     Type) -> Reply

          Types
               SupplierAdmin = #objref
               SupplierType = 'ANY_EVENT' | 'STRUCTURED_EVENT'  |
               'SEQUENCE_EVENT'
               Reply = {Proxy, ProxyID}
               Proxy = #objref
               ProxyID = long()

          Determined by the _S_u_p_p_l_i_e_r_T_y_p_e  parameter  a  compliant
          proxy  is  created  and its object reference along with
          its Id is returned by this operation.

     obtain_push_consumer(SupplierAdmin) -> Proxy

          Types
               SupplierAdmin = #objref
               Proxy = #objref

          A proxy which accepts #_a_n_y{} events is created by  this
          operation.

     destroy(SupplierAdmin) -> ok

          Types
               SupplierAdmin = #objref

          This operation terminates the SupplierAdmin object  and
          notifies the creating channel that the target object no
          longer is active.

AUTHOR
     support - support@erlang.ericsson.se




















Ericsson UtvecklLiansgtscAhBange: cosNotification  1.0.2              3



