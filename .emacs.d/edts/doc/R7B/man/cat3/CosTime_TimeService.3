


CosTime_TimeService(3)ERLANG MODULE DEFINITIOCNosTime_TimeService(3)



MODULE
     CosTime_TimeService -

DESCRIPTION
     To get access to the record definitions for  the  structures
     use:
      -_i_n_c_l_u_d_e__l_i_b("_c_o_s_T_i_m_e/_i_n_c_l_u_d_e/*._h_r_l").


EXPORTS
     universal_time(TimeService) -> Reply

          Types
               TimeService = #objref
               Reply      =       UTO       |       {'EXCEPTION",
               #'TimerService_TimeUnavailable'{}}
               UTO = #objref

          This operation returns the current time and the Inaccu-
          racy given when starting this application in a UTO. The
          time base is _1_5 _o_c_t_o_b_e_r _1_5_8_2 _0_0:_0_0. Comparing two  time
          objects  which  use  different time base is, by obvious
          reasons, pointless.

     new_universal_time(TimeService, Time,  Inaccuracy,  Tdf)  ->
     UTO

          Types
               TimeService = UTO = #objref
               Time = Inaccuracy = ulonglong()
               Tdf = short()

          This operation creates a new  UTO  object  representing
          the  time  parameters  given.  This  is the only way to
          create a UTO with  an  arbitrary  time  from  its  com-
          ponents. This is useful when using the Timer Event Ser-
          vice.

     uto_from_utc(TimeService, Utc) -> UTO

          Types
               TimeService = UTO = #objref
               Utc  =  #'TimeBase_UtcT'{time,  inacclo,  inacchi,
               tdf}
               time = ulonglong()
               inacclo = ulong()
               inacchi = ushort()
               tdf = short()

          This operation is used to create a UTO given a time  in
          the Utc form.




Ericsson UtvecklingsLaAsBt change: cosTime  1.0.1                  1






CosTime_TimeService(3)ERLANG MODULE DEFINITIOCNosTime_TimeService(3)



     new_interval(TimeService, Lower, Upper) -> TIO

          Types
               TimeService = TIO = #objref
               Lower = Upper = ulonglong()

          This operation is used to  create  a  new  TIO  object,
          representing  the input parameters. If _L_o_w_e_r is greater
          than Upper BAD_PARAM is raised.

AUTHOR
     Niclas Eklund - support@erlang.ericsson.se











































Ericsson UtvecklingsLaAsBt change: cosTime  1.0.1                  2



