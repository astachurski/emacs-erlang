


error_handler(3)    ERLANG MODULE DEFINITION     error_handler(3)



MODULE
     error_handler - Default System Error Handler

DESCRIPTION
     The error handler module defines what happens  when  certain
     types of errors occur.


EXPORTS
     undefined_function(Module, Func, ArgList) -> term()

          Types
               Module = Func = atom()
               ArgList = [term()]

          This function  is  evaluated  if  a  call  is  made  to
          _M_o_d_u_l_e:_F_u_n_c(_A_r_g_L_i_s_t)  which is undefined. This function
          is evaluated inside the  process  making  the  original
          call.

          If _M_o_d_u_l_e is interpreted, the  interpreter  is  invoked
          and  the  return value of the interpreted _F_u_n_c(_A_r_g_L_i_s_t)
          call is returned.

          Otherwise,  it  returns,  if  possible,  the  value  of
          _a_p_p_l_y(_M_o_d_u_l_e,  _F_u_n_c, _A_r_g_L_i_s_t) after an attempt has been
          made to autoload _M_o_d_u_l_e. If this is not  possible,  the
          function calling _M_o_d_u_l_e:_F_u_n_c(_A_r_g_L_i_s_t) is exited.

     undefined_lambda(Module, Fun, ArgList) -> term()

          Types
               Module = Func = atom()
               ArgList = [term()]

          This function  is  evaluated  if  a  call  is  made  to
          _F_u_n(_A_r_g_L_i_s_t)  when  the  module defining the _f_u_n is not
          loaded. This function is evaluated inside  the  process
          making the original call.

          If _M_o_d_u_l_e is interpreted, the  interpreter  is  invoked
          and  the  return  value of the interpreted _F_u_n(_A_r_g_L_i_s_t)
          call is returned.

          Otherwise,  it  returns,  if  possible,  the  value  of
          _a_p_p_l_y(_F_u_n,  _A_r_g_L_i_s_t)  after an attempt has been made to
          autoload _M_o_d_u_l_e. If this is not possible,  the  process
          calling the _f_u_n is exited.

Notes
     The code in _e_r_r_o_r__h_a_n_d_l_e_r  is  complex  and  should  not  be
     changed  without fully understanding the interaction between



Ericsson UtvecklingsLAaBst change: kernel  2.6.1                  1






error_handler(3)    ERLANG MODULE DEFINITION     error_handler(3)



     the error handler, the _i_n_i_t process of the code server,  and
     the I/O mechanism of the code.

     Changes in the  code  which  may  seem  small  can  cause  a
     deadlock  as  unforeseen  consequences may occur. The use of
     _i_n_p_u_t is dangerous in this type of code.

AUTHORS
     Joe Armstrong - support@erlang.ericsson.se
     Robert Virding - support@erlang.ericsson.se
     Magnus Froberg - support@erlang.ericsson.se












































Ericsson UtvecklingsLAaBst change: kernel  2.6.1                  2



