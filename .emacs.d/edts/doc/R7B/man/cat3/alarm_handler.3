


alarm_handler(3)    ERLANG MODULE DEFINITION     alarm_handler(3)



MODULE
     alarm_handler - An Alarm Handling Process

DESCRIPTION
     The alarm handler process is a _g_e_n__e_v_e_n_t event manager  pro-
     cess  which  receives  alarms in the system. This process is
     not intended to be a complete alarm handler.  It  defines  a
     place  to which alarms can be sent. One simple event handler
     is installed in the alarm handler at start-up, but users are
     encouraged to write and install their own handlers.

     The simple event handler sends all alarms as info reports to
     the  error logger, and saves all of them in a list which can
     be passed to a user defined  event  handler,  which  may  be
     installed  at a later stage. The list can grow large if many
     alarms are generated. So it is a good reason  to  install  a
     better user defined handler.

     There are functions to set and clear alarms. The  format  of
     alarms  are  defined  by  the  user.  For  example, an event
     handler for SNMP could be defined, together  with  an  alarm
     MIB.

     The alarm handler is part of the SASL application.

     When writing new event handlers for the alarm  handler,  the
     following events must be handled:

       {_s_e_t__a_l_a_r_m, {_A_l_a_r_m_I_d, _A_l_a_r_m_D_e_s_c_r}}:
           This        event        is        generated        by
           _a_l_a_r_m__h_a_n_d_l_e_r:_s_e_t__a_l_a_r_m({_A_l_a_r_m_I_d, _A_l_a_r_m_D_e_c_s_r}).

       {_c_l_e_a_r__a_l_a_r_m, _A_l_a_r_m_I_d}:
           This        event        is        generated        by
           _a_l_a_r_m__h_a_n_d_l_e_r:_c_l_e_a_r__a_l_a_r_m(_A_l_a_r_m_I_d).

     The default simple handler is called  _a_l_a_r_m__h_a_n_d_l_e_r  and  it
     may  be  exchanged  by  calling  _g_e_n__e_v_e_n_t:_s_w_a_p__h_a_n_d_l_e_r/_3 as
     _g_e_n__e_v_e_n_t:_s_w_a_p__h_a_n_d_l_e_r(_a_l_a_r_m__h_a_n_d_l_e_r, {_a_l_a_r_m__h_a_n_d_l_e_r, _s_w_a_p},
     {_N_e_w_H_a_n_d_l_e_r,  _A_r_g_s}). _N_e_w_H_a_n_d_l_e_r:_i_n_i_t({_A_r_g_s, {_a_l_a_r_m__h_a_n_d_l_e_r,
     _A_l_a_r_m_s}}) is  called.  Refer  to  gen_event(3)  for  further
     details.


EXPORTS
     clear_alarm(AlarmId) -> void()

          Types
               AlarmId = term()

          Clears all alarms with id _A_l_a_r_m_I_d.




Ericsson Utvecklings ABLast change: sasl  1.9                    1






alarm_handler(3)    ERLANG MODULE DEFINITION     alarm_handler(3)



     get_alarms() -> [alarm()]

          Returns a list of all active alarms. This function  can
          only be used when the simple handler is installed.

     set_alarm(alarm())

          Types
               alarm() = {AlarmId, AlarmDescription}
               AlarmId = term()
               AlarmDescription = term()

          Sets an alarm with id _A_l_a_r_m_I_d. This id  is  used  at  a
          later stage when the alarm is cleared.

See Also
     error_logger(3), gen_event(3)

AUTHOR
     Martin Bjorklund - support@erlang.ericsson.se



































Ericsson Utvecklings ABLast change: sasl  1.9                    2



