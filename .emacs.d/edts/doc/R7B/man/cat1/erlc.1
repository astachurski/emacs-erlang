


erlc(1)                   USER COMMANDS                   erlc(1)



NAME
     erlc - Compiler

DESCRIPTION
     The _e_r_l_c program provides a common way to run all  compilers
     in  the  Erlang  system.  Depending on the extension of each
     input file,  _e_r_l_c  will  invoke  the  appropriate  compiler.
     Regardless  of  which  compiler  is used, the same flags are
     used to provide parameters such as include paths and  output
     directory.

EXPORTS
     erlc flags file1.ext file2.ext...

          _E_r_l_c compiles one or more files. The files must include
          the extension, for example ._e_r_l for Erlang source code,
          or ._y_r_l for Yecc source code. _E_r_l_c uses  the  extension
          to invoke the correct compiler.

Generally Useful Flags
     The following flags are supported:

       -I _d_i_r_e_c_t_o_r_y:
           Instructs the compiler to search for include  file  in
           the  specified  directory.  If not given, the compiler
           assumes that include files are located in the  current
           working directory.

       -o _d_i_r_e_c_t_o_r_y:
           The directory where the compiler should place the out-
           put  files.  If  not  specified,  output files will be
           placed in the current working directory.

       -D_n_a_m_e:
           Defines a macro.

       -D_n_a_m_e=_v_a_l_u_e:
           Defines a macro with the given value. The value can be
           any  Erlang term. Depending on the platform, the value
           may need to be quoted if the shell  itself  interprets
           certain  characters.  On  Unix,  terms  which  contain
           tuples and list must be quoted.  Terms  which  contain
           spaces must be quoted on all platforms.

       -W: Enables warning messages. Without  this  switch,  only
           errors will be reported.

       -v: Enables verbose output.

       -b _o_u_t_p_u_t-_t_y_p_e:
           Specifies the type of output file. Generally,  _o_u_t_p_u_t-
           _t_y_p_e  is  the same as the file extension of the output



Ericsson Utvecklings ALBast change: erts  5.0.1                   1






erlc(1)                   USER COMMANDS                   erlc(1)



           file but without  the  period.  This  option  will  be
           ignored  by compilers that have a a single output for-
           mat.

       --: Signals that no more options will follow. The rest  of
           the  arguments  will be treated as file names, even if
           they start with hyphens.

       +_t_e_r_m:
           A flag starting with a plus ('+') rather than a hyphen
           will  be  converted  to  an  Erlang  term  and  passed
           unchanged  to  the   compiler.   For   instance,   the
           _e_x_p_o_r_t__a_l_l  option  for  the  Erlang  compiler  can be
           specified as follows:

           erlc +export_all file.erl

           Depending on the platform, the value may  need  to  be
           quoted  if the shell itself interprets certain charac-
           ters. On Unix, terms which  contain  tuples  and  list
           must  be  quoted.  Terms  which contain spaces must be
           quoted on all platforms.

Special Flags
     The flags in this section are useful in  special  situations
     such as re-building the OTP system.

       -ilroot _d_i_r_e_c_t_o_r_y:
           Defines the root directory to be used for  _i_n_c_l_u_d_e__l_i_b
           directives  in  the  Erlang  compiler. Defaults to the
           library directory of the emulator where  the  compiler
           is run.

       -pa _d_i_r_e_c_t_o_r_y:
           Appends _d_i_r_e_c_t_o_r_y to the front of the code path in the
           invoked  Erlang  emulator.  This can be used to invoke
           another compiler than the default one.

       -pz _d_i_r_e_c_t_o_r_y:
           Appends _d_i_r_e_c_t_o_r_y to the  code  path  in  the  invoked
           Erlang emulator.

Supported Compilers
       .erl:
           Erlang source code. It generates a ._b_e_a_m file.

           The options -P, -E, and -S  are  equivalent  to  +'P',
           +'E',  and  +'S',  except  that it is not necessary to
           include the single quotes to  protect  them  from  the
           shell.





Ericsson Utvecklings ALBast change: erts  5.0.1                   2






erlc(1)                   USER COMMANDS                   erlc(1)



           Supported options: -ilroot, -I, -o, -D, -v, -W, -b.

       .yrl:
           Yecc source code. It generates an ._e_r_l file.

           Use the -I option with the name of a file to use  that
           file  as  a customized prologue file (the fourth argu-
           ment of the _y_e_c_c:_y_e_c_c/_4 function).

           Supported options: -o, -v, -I (see above).

       .mib:
           MIB for SNMP. It generates a ._b_i_n file.

           Supported options: -I, -o, -W.

       .bin:
           A compiled MIB for SNMP. It generates a ._h_r_l file.

           Supported options: -o, -v.

       .rel:
           Script file. It generates a boot file.

           Use the -I to name  directories  to  be  searched  for
           application  files  (equivalent  to  the  _p_a_t_h  in the
           option list for _s_y_s_t_o_o_l_s:_m_a_k_e__s_c_r_i_p_t/_2).

           Supported options: -o.

       .h: A interface definition for IG  (Interface  Generator).
           It generates C and Erlang files.

           Supported options: -o.

Environment Variables
       ERLC_EMULATOR:
           The command for starting the emulator. Default is  _e_r_l
           in  the  same directory as the _e_r_l_c program itself, or
           if it doesn't exist, _e_r_l in  any  of  the  directories
           given in the _P_A_T_H environment variable.

See Also
     erl(1), erl_compile(3), compile(3), yecc(3), snmp(3)

AUTHOR
     Bjorn Gustavsson - support@erlang.ericsson.se








Ericsson Utvecklings ALBast change: erts  5.0.1                   3



