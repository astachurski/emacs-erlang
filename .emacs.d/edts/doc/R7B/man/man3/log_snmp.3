.TH log_snmp 3 "eva  2.0.2.1" "Ericsson Utvecklings AB" "ERLANG MODULE DEFINITION"
.SH MODULE
log_snmp \- Implements an SNMP interface to the log service in the EVA application
.SH DESCRIPTION
.LP
This module implements an SNMP interface to the log service in the EVA application\&. The MIB implemented by this adaptation is OTP-LOG-MIB\&. The MIB is located in the directory \fImibs\fR in the distribution\&. 

.SH EXPORTS
.LP
.B
create_tables(Nodes) -> void()
.br
.RS
.TP
Types
Nodes = [node()]
.br
.RE
.RS
.LP
This function creates the Mnesia tables required by the log SNMP implementation\&. \fINodes\fR is a list of nodes where the tables should be replicated\&. This list of nodes should specify the same nodes where the application EVA can be run distributed, in order for the log server to always have local access to the tables\&. 
.LP
This function should be called once when installing the EVA application in the system\&. 
.RE
.LP
.B
register_type(Type,TypeOid,TypeFunc)
.br
.RS
.TP
Types
Type = term()
.br
TypeOid = oid() = [int()]
.br
TypeFunc = {M, F, A}
.br
M = F = atom()
.br
A = list()
.br
.RE
.RS
.LP
This function is used to register a type of log to the SNMP log functionality\&. The \fIType\fR is the same as the \fIType\fR argument given to \fIlog:open/3\fR\&. 
.LP
The purpose of this function is to tell the SNMP LOG functions that all logs of type \fIType\fR have an SNMP type defined in some MIB (\fITypeOid\fR, defined as an OBJECT IDENTITY), and that the \fITypeFunc\fR should be used to control creation and transfer of logs of this type\&. 
.LP
The type control function (\fITypeFunc\fR) will be called when a manger tries to create or delete a log of type \fITypeOid\fR, or when he tries to transfer a log of this type\&. The purpose of this function is to check if creation is possible, and to format the log when it is transferred\&. The function should be defined as: 
.RS 2
.TP 4
.B
M:F(validate_creation, LogIndex, Cols | A) -> true | false | {SnmpErr, Col}:
Called when the manager tries to create a new log of type \fITypeOid\fR\&. It is supposed to check if it is possible to create a new log of this type\&. If it is, it should return \fItrue\fR\&. If it is never possible to create logs of this type, it should return \fIfalse\fR\&. Otherwise, the creation is not possible becasue some resource is not available, and the function should return \fI{SnmpError, Col}\fR (see definition of SNMP instrumenetation functions for a description of this)\&.
.TP 4
.B
M:F(create, Log | A) -> ok | error:
Called when \fIM:F(validate_creation, \&.\&.\&.)\fR returned \fItrue\fR\&. This function is supposed to create the log\&. \fILog\fR is a \fI#log\fR record, defined in \fIlog\&.hrl\fR\&.
.TP 4
.B
M:F(delete, Log | A) -> void():
Called when a log previously created by a manager is deleted\&.
.TP 4
.B
M:F(search, LogIndex, LogTrIndex | A) -> SearchFunc:
Called when the manager activates a log transfer for a log of this type\&. The \fILogIndex\fR is the index into \fIlogTable\fR, and \fI{LogIndex, LogTrIndex}\fR is the index into the \fIlogTransferTable\fR\&. This function is supposed to return a search function as specified in \fIlog:transfer/5\fR\&. The records for these tables are defined in \fIinclude/log_snmp\&.hrl\fR\&.
.RE
.RE
.LP
.B
start_link() -> {ok, Pid} | {error, Reason}
.br
.RS
.LP
Starts the LOG SNMP implementation\&. This function can be used to include the service in a supervisor\&. Normally, functions in the supervisor \fIlog_sup\fR can be used instead\&. 
.LP
The function \fIcreate_tables/1\fR must have been called before the server is started\&. 
.RE
.SH Instrumentation functions for the OTP-LOG-MIB
.LP
In some cases other adaptations may need access to the SNMP specific data in LOG\&. To do this, the instrumentation functions for the SNMP objects can be used\&. These instrumentation functions takes the arguments and return the values defined in the application \fIsnmp\fR\&. 
.SH EXPORTS
.LP
.B
log_table(Op, RowIndex, Cols) -> InstrumRet
.br
.RS
.LP
Instrumentation function for \fIlogTable\fR\&. This function assumes that access checks are made according to the MIB, so it may crash if e\&.g\&. \fIlogOperStatus\fR is set\&. 
.RE
.LP
.B
log_tr_table(Op, RowIndex, Cols) -> InstrumRet
.br
.RS
.LP
Instrumentation function for \fIlogTransferTable\fR\&. This function assumes that access checks are made according to the MIB\&. 
.RE
.SH AUTHOR
.nf
Martin Bjorklund - support@erlang.ericsson.se
.fi
