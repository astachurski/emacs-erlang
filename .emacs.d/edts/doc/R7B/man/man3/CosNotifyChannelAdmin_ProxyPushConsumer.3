.TH CosNotifyChannelAdmin_ProxyPushConsumer 3 "cosNotification  1.0.2" "Ericsson Utvecklings AB" "ERLANG MODULE DEFINITION"
.SH MODULE
CosNotifyChannelAdmin_ProxyPushConsumer \-  
.SH DESCRIPTION
.LP
To get access to the record definitions for the structures use:
.br
 \fI-include_lib("cosNotification/include/*\&.hrl")\&.\fR 
.LP
This module also exports the functions described in: 
.RS 2
.TP 2
*
CosNotifyComm_NotifyPublish
.TP 2
*
CosNotification_QoSAdmin
.TP 2
*
CosNotifyFilter_FilterAdmin
.TP 2
*
CosNotifyChannelAdmin_ProxyConsumer
.RE

.SH EXPORTS
.LP
.B
connect_any_push_supplier(ProxyPushConsumer, PushSupplier) -> Reply
.br
.RS
.TP
Types
ProxyPushConsumer = #objref
.br
PushSupplier = #objref
.br
Reply = ok | {\&'EXCEPTION\&', #\&'CosEventChannelAdmin_AlreadyConnected\&'{}}
.br
.RE
.RS
.LP
This operation connects a \fIPushSupplier\fR to the target object\&. If a connection already exists the \fIAlreadyConnected\fR exception is raised\&. 
.RE
.LP
.B
push(ProxyPushConsumer, Event) -> Reply
.br
.RS
.TP
Types
ProxyPushConsumer = #objref
.br
Event = #any
.br
Reply = ok | {\&'EXCEPTION\&', #\&'CosEventChannelAdmin_Disconnected\&'{}}
.br
.RE
.RS
.LP
This operation pushes an \fI#any{}\fR event to the target object\&. If no client have been connected the \fIDisconnected\fR exception is raised\&. 
.RE
.LP
.B
disconnect_push_consumer(ProxyPushConsumer) -> ok
.br
.RS
.TP
Types
ProxyPushConsumer = #objref
.br
.RE
.RS
.LP
Invoking this operation will cause the target object to close the connection and terminate\&. 
.RE
.SH AUTHOR
.nf
support - support@erlang.ericsson.se
.fi
