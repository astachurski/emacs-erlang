.TH CosNotifyChannelAdmin_ProxyPullConsumer 3 "cosNotification  1.0.2" "Ericsson Utvecklings AB" "ERLANG MODULE DEFINITION"
.SH MODULE
CosNotifyChannelAdmin_ProxyPullConsumer \-  
.SH DESCRIPTION
.LP
To get access to the record definitions for the structures use:
.br
 \fI-include_lib("cosNotification/include/*\&.hrl")\&.\fR 
.LP
This module also exports the functions described in: 
.RS 2
.TP 2
*
CosNotifyComm_NotifyPublish
.TP 2
*
CosNotification_QoSAdmin
.TP 2
*
CosNotifyFilter_FilterAdmin
.TP 2
*
CosNotifyChannelAdmin_ProxyConsumer
.RE

.SH EXPORTS
.LP
.B
connect_any_pull_supplier(ProxyPullConsumer, PullSupplier) -> Reply
.br
.RS
.TP
Types
ProxyPullConsumer = #objref
.br
PullSupplier = #objref
.br
Reply = ok | {\&'EXCEPTION\&', #\&'CosEventChannelAdmin_AlreadyConnected\&'{}} | {\&'EXCEPTION\&', #\&'CosEventChannelAdmin_TypeError\&'{}}
.br
.RE
.RS
.LP
This operation connects the given \fIPullSupplier\fR to the target object\&. If a client is already connected the \fIAlreadyConnected\fR exception will be raised\&. The client must support the operations \fIpull\fR and \fItry_pull\fR, otherwise the \fITypeError\fR exception is raised\&. 
.RE
.LP
.B
suspend_connection(ProxyPullConsumer) -> Reply
.br
.RS
.TP
Types
ProxyPullConsumer = #objref
.br
Reply = ok | {\&'EXCEPTION\&', #\&'CosNotifyChannelAdmin_ConnectionAlreadyInactive\&'{}} | {\&'EXCEPTION\&', #\&'CosNotifyChannelAdmin_NotConnected\&'{}}
.br
.RE
.RS
.LP
If we want to temporarily suspend the connection with the target object this operation must be sued\&. If the connection already have been suspended or no client have been connected an exception is raised\&. 
.RE
.LP
.B
resume_connection(ProxyPullConsumer) -> Reply
.br
.RS
.TP
Types
ProxyPullConsumer = #objref
.br
Reply = ok | {\&'EXCEPTION\&', #\&'CosNotifyChannelAdmin_ConnectionAlreadyActive\&'{}} | {\&'EXCEPTION\&', #\&'CosNotifyChannelAdmin_NotConnected\&'{}}
.br
.RE
.RS
.LP
If The connection have been suspended earlier we can invoke this operation to reinstate the connection\&. If the connection already is active or no client have been connected to the target object an exception is raised\&. 
.RE
.LP
.B
disconnect_pull_consumer(ProxyPullConsumer) -> ok
.br
.RS
.TP
Types
ProxyPullConsumer = #objref
.br
.RE
.RS
.LP
Invoking this operation disconnects the client from the target object which then terminates and inform its administrative parent\&. 
.RE
.SH AUTHOR
.nf
support - support@erlang.ericsson.se
.fi
