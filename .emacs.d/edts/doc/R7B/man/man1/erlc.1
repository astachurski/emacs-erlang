.TH erlc 1 "erts  5.0.1" "Ericsson Utvecklings AB" "USER COMMANDS"
.SH NAME
erlc \- Compiler
.SH DESCRIPTION
.LP
The \fIerlc\fR program provides a common way to run all compilers in the Erlang system\&. Depending on the extension of each input file, \fIerlc\fR will invoke the appropriate compiler\&. Regardless of which compiler is used, the same flags are used to provide parameters such as include paths and output directory\&. 
.LP


.SH EXPORTS
.LP
.B
erlc flags file1\&.ext file2\&.ext\&.\&.\&.
.br
.RS
.LP
\fIErlc\fR compiles one or more files\&. The files must include the extension, for example \fI\&.erl\fR for Erlang source code, or \fI\&.yrl\fR for Yecc source code\&. \fIErlc\fR uses the extension to invoke the correct compiler\&. 
.RE
.SH Generally Useful Flags
.LP
The following flags are supported: 
.RS 2
.TP 4
.B
-I \fIdirectory\fR:
Instructs the compiler to search for include file in the specified directory\&. If not given, the compiler assumes that include files are located in the current working directory\&. 
.TP 4
.B
-o \fIdirectory\fR:
The directory where the compiler should place the output files\&. If not specified, output files will be placed in the current working directory\&. 
.TP 4
.B
-D\fIname\fR:
Defines a macro\&. 
.TP 4
.B
-D\fIname\fR=\fIvalue\fR:
Defines a macro with the given value\&. The value can be any Erlang term\&. Depending on the platform, the value may need to be quoted if the shell itself interprets certain characters\&. On Unix, terms which contain tuples and list must be quoted\&. Terms which contain spaces must be quoted on all platforms\&. 
.TP 4
.B
-W:
Enables warning messages\&. Without this switch, only errors will be reported\&. 
.TP 4
.B
-v:
Enables verbose output\&. 
.TP 4
.B
-b \fIoutput-type\fR:
Specifies the type of output file\&. Generally, \fIoutput-type\fR is the same as the file extension of the output file but without the period\&. This option will be ignored by compilers that have a a single output format\&. 
.TP 4
.B
--:
Signals that no more options will follow\&. The rest of the arguments will be treated as file names, even if they start with hyphens\&. 
.TP 4
.B
+\fIterm\fR:
A flag starting with a plus (\&'\fI+\fR\&') rather than a hyphen will be converted to an Erlang term and passed unchanged to the compiler\&. For instance, the \fIexport_all\fR option for the Erlang compiler can be specified as follows: 
.RS 4

.nf
erlc +export_all file\&.erl
.fi
.LP

.LP
Depending on the platform, the value may need to be quoted if the shell itself interprets certain characters\&. On Unix, terms which contain tuples and list must be quoted\&. Terms which contain spaces must be quoted on all platforms\&. 
.RE
.RE
.SH Special Flags
.LP
The flags in this section are useful in special situations such as re-building the OTP system\&. 
.RS 2
.TP 4
.B
-ilroot \fIdirectory\fR:
Defines the root directory to be used for \fIinclude_lib\fR directives in the Erlang compiler\&. Defaults to the library directory of the emulator where the compiler is run\&. 
.TP 4
.B
-pa \fIdirectory\fR:
Appends \fIdirectory\fR to the front of the code path in the invoked Erlang emulator\&. This can be used to invoke another compiler than the default one\&. 
.TP 4
.B
-pz \fIdirectory\fR:
Appends \fIdirectory\fR to the code path in the invoked Erlang emulator\&. 
.RE
.SH Supported Compilers
.RS 2
.TP 4
.B
\&.erl:
Erlang source code\&. It generates a \fI\&.beam\fR file\&. 
.RS 4
.LP
The options -P, -E, and -S are equivalent to +\&'P\&', +\&'E\&', and +\&'S\&', except that it is not necessary to include the single quotes to protect them from the shell\&. 
.LP
Supported options: -ilroot, -I, -o, -D, -v, -W, -b\&. 
.RE
.TP 4
.B
\&.yrl:
Yecc source code\&. It generates an \fI\&.erl\fR file\&. 
.RS 4
.LP
Use the -I option with the name of a file to use that file as a customized prologue file (the fourth argument of the \fIyecc:yecc/4\fR function)\&. 
.LP
Supported options: -o, -v, -I (see above)\&. 
.RE
.TP 4
.B
\&.mib:
MIB for SNMP\&. It generates a \fI\&.bin\fR file\&. 
.RS 4
.LP
Supported options: -I, -o, -W\&. 
.RE
.TP 4
.B
\&.bin:
A compiled MIB for SNMP\&. It generates a \fI\&.hrl\fR file\&. 
.RS 4
.LP
Supported options: -o, -v\&. 
.RE
.TP 4
.B
\&.rel:
Script file\&. It generates a boot file\&. 
.RS 4
.LP
Use the -I to name directories to be searched for application files (equivalent to the \fIpath\fR in the option list for \fIsystools:make_script/2\fR)\&. 
.LP
Supported options: -o\&. 
.RE
.TP 4
.B
\&.h:
A interface definition for IG (Interface Generator)\&. It generates C and Erlang files\&. 
.RS 4
.LP
Supported options: -o\&. 
.RE
.RE
.SH Environment Variables
.RS 2
.TP 4
.B
ERLC_EMULATOR:
The command for starting the emulator\&. Default is \fIerl\fR in the same directory as the \fIerlc\fR program itself, or if it doesn\&'t exist, \fIerl\fR in any of the directories given in the \fIPATH\fR environment variable\&.
.RE
.SH See Also
.LP
erl(1), erl_compile(3), compile(3), yecc(3), snmp(3) 
.SH AUTHOR
.nf
Bjorn Gustavsson - support@erlang.ericsson.se
.fi
